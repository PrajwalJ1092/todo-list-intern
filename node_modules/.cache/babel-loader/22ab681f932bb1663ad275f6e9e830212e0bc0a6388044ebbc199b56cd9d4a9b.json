{"ast":null,"code":"var _jsxFileName = \"D:\\\\HELPER\\\\todo-list-app\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  onUpdate,\n  onToggle,\n  onDelete\n}) => {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const handleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n  const handleToggle = () => {\n    onToggle(task.id);\n  };\n  const handleDelete = () => {\n    onDelete(task.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-item ${task.completed ? 'completed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleExpand,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Last updated: \", new Date(task.timestamp).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onUpdate(task),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggle,\n        children: task.completed ? 'Mark as Incomplete' : 'Mark as Done'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"FPNvbbHVlWWR4LKxxNntSxiIS38=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskItem","task","onUpdate","onToggle","onDelete","_s","isExpanded","setIsExpanded","handleExpand","handleToggle","id","handleDelete","className","completed","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","description","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["D:/HELPER/todo-list-app/src/components/TaskItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TaskItem = ({ task, onUpdate, onToggle, onDelete }) => {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  const handleExpand = () => {\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    onToggle(task.id);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    onDelete(task.id);\r\n  };\r\n\r\n  return (\r\n    <div className={`task-item ${task.completed ? 'completed' : ''}`}>\r\n      <div onClick={handleExpand}>\r\n        <h3>{task.title}</h3>\r\n      </div>\r\n      {isExpanded && (\r\n        <div>\r\n          <p>{task.description}</p>\r\n          <small>Last updated: {new Date(task.timestamp).toLocaleString()}</small>\r\n          <button onClick={() => onUpdate(task)}>Edit</button>\r\n          <button onClick={handleToggle}>\r\n            {task.completed ? 'Mark as Incomplete' : 'Mark as Done'}\r\n          </button>\r\n          <button onClick={handleDelete}>Delete</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzBD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzBN,QAAQ,CAACF,IAAI,CAACS,EAAE,CAAC;EACnB,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBP,QAAQ,CAACH,IAAI,CAACS,EAAE,CAAC;EACnB,CAAC;EAED,oBACEX,OAAA;IAAKa,SAAS,EAAE,aAAaX,IAAI,CAACY,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;IAAAC,QAAA,gBAC/Df,OAAA;MAAKgB,OAAO,EAAEP,YAAa;MAAAM,QAAA,eACzBf,OAAA;QAAAe,QAAA,EAAKb,IAAI,CAACe;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,EACLd,UAAU,iBACTP,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAIb,IAAI,CAACoB;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBrB,OAAA;QAAAe,QAAA,GAAO,gBAAc,EAAC,IAAIQ,IAAI,CAACrB,IAAI,CAACsB,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxErB,OAAA;QAAQgB,OAAO,EAAEA,CAAA,KAAMb,QAAQ,CAACD,IAAI,CAAE;QAAAa,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpDrB,OAAA;QAAQgB,OAAO,EAAEN,YAAa;QAAAK,QAAA,EAC3Bb,IAAI,CAACY,SAAS,GAAG,oBAAoB,GAAG;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACTrB,OAAA;QAAQgB,OAAO,EAAEJ,YAAa;QAAAG,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAjCIL,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}