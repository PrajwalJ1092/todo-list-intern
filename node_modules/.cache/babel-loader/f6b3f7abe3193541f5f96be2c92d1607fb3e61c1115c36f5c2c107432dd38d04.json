{"ast":null,"code":"var _jsxFileName = \"D:\\\\HELPER\\\\todo-list-app\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskItem from './TaskItem';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [search, setSearch] = useState('');\n  const [currentTask, setCurrentTask] = useState(null);\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    } else {\n      // Set initial tasks if local storage is empty\n      const initialTasks = [{\n        id: 1,\n        title: \"Buy groceries\",\n        description: \"Milk, Bread, Eggs, Butter\",\n        completed: false,\n        timestamp: \"2024-07-29T12:34:56\"\n      }, {\n        id: 2,\n        title: \"Read a book\",\n        description: \"The Great Gatsby by F. Scott Fitzgerald\",\n        completed: false,\n        timestamp: \"2024-07-28T15:22:10\"\n      }];\n      setTasks(initialTasks);\n      localStorage.setItem('tasks', JSON.stringify(initialTasks));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const handleSave = task => {\n    if (currentTask) {\n      setTasks(tasks.map(t => t.id === currentTask.id ? {\n        ...t,\n        ...task,\n        timestamp: new Date().toISOString()\n      } : t));\n      setCurrentTask(null);\n    } else {\n      setTasks([...tasks, {\n        ...task,\n        id: tasks.length + 1,\n        completed: false,\n        timestamp: new Date().toISOString()\n      }]);\n    }\n  };\n  const handleUpdate = task => {\n    setCurrentTask(task);\n  };\n  const handleToggle = id => {\n    setTasks(tasks.map(t => t.id === id ? {\n      ...t,\n      completed: !t.completed\n    } : t));\n  };\n  const handleDelete = id => {\n    setTasks(tasks.filter(t => t.id !== id));\n  };\n  const filteredTasks = tasks.filter(task => task.title.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onSave: handleSave,\n      currentTask: currentTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Tasks\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        onUpdate: handleUpdate,\n        onToggle: handleToggle,\n        onDelete: handleDelete\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"4EtrNsApJIaZLNn9C7z8FG9xMYY=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","TaskItem","TaskForm","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","search","setSearch","currentTask","setCurrentTask","storedTasks","localStorage","getItem","JSON","parse","initialTasks","id","title","description","completed","timestamp","setItem","stringify","handleSave","task","map","t","Date","toISOString","length","handleUpdate","handleToggle","handleDelete","filter","filteredTasks","toLowerCase","includes","children","onSave","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onUpdate","onToggle","onDelete","_c","$RefreshReg$"],"sources":["D:/HELPER/todo-list-app/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskItem from './TaskItem';\r\nimport TaskForm from './TaskForm';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedTasks = localStorage.getItem('tasks');\r\n    if (storedTasks) {\r\n      setTasks(JSON.parse(storedTasks));\r\n    } else {\r\n      // Set initial tasks if local storage is empty\r\n      const initialTasks = [\r\n        {\r\n          id: 1,\r\n          title: \"Buy groceries\",\r\n          description: \"Milk, Bread, Eggs, Butter\",\r\n          completed: false,\r\n          timestamp: \"2024-07-29T12:34:56\"\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Read a book\",\r\n          description: \"The Great Gatsby by F. Scott Fitzgerald\",\r\n          completed: false,\r\n          timestamp: \"2024-07-28T15:22:10\"\r\n        }\r\n      ];\r\n      setTasks(initialTasks);\r\n      localStorage.setItem('tasks', JSON.stringify(initialTasks));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const handleSave = (task) => {\r\n    if (currentTask) {\r\n      setTasks(tasks.map(t => t.id === currentTask.id ? { ...t, ...task, timestamp: new Date().toISOString() } : t));\r\n      setCurrentTask(null);\r\n    } else {\r\n      setTasks([...tasks, { ...task, id: tasks.length + 1, completed: false, timestamp: new Date().toISOString() }]);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (task) => {\r\n    setCurrentTask(task);\r\n  };\r\n\r\n  const handleToggle = (id) => {\r\n    setTasks(tasks.map(t => t.id === id ? { ...t, completed: !t.completed } : t));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setTasks(tasks.filter(t => t.id !== id));\r\n  };\r\n\r\n  const filteredTasks = tasks.filter(task => task.title.toLowerCase().includes(search.toLowerCase()));\r\n\r\n  return (\r\n    <div>\r\n      <TaskForm onSave={handleSave} currentTask={currentTask} />\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Search Tasks\" \r\n        value={search} \r\n        onChange={(e) => setSearch(e.target.value)} \r\n      />\r\n      <div>\r\n        {filteredTasks.map(task => (\r\n          <TaskItem key={task.id} task={task} onUpdate={handleUpdate} onToggle={handleToggle} onDelete={handleDelete} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMa,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfL,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC;IACnC,CAAC,MAAM;MACL;MACA,MAAMK,YAAY,GAAG,CACnB;QACEC,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,eAAe;QACtBC,WAAW,EAAE,2BAA2B;QACxCC,SAAS,EAAE,KAAK;QAChBC,SAAS,EAAE;MACb,CAAC,EACD;QACEJ,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,aAAa;QACpBC,WAAW,EAAE,yCAAyC;QACtDC,SAAS,EAAE,KAAK;QAChBC,SAAS,EAAE;MACb,CAAC,CACF;MACDf,QAAQ,CAACU,YAAY,CAAC;MACtBJ,YAAY,CAACU,OAAO,CAAC,OAAO,EAAER,IAAI,CAACS,SAAS,CAACP,YAAY,CAAC,CAAC;IAC7D;EACF,CAAC,EAAE,EAAE,CAAC;EAENlB,SAAS,CAAC,MAAM;IACdc,YAAY,CAACU,OAAO,CAAC,OAAO,EAAER,IAAI,CAACS,SAAS,CAAClB,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMmB,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAIhB,WAAW,EAAE;MACfH,QAAQ,CAACD,KAAK,CAACqB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKR,WAAW,CAACQ,EAAE,GAAG;QAAE,GAAGU,CAAC;QAAE,GAAGF,IAAI;QAAEJ,SAAS,EAAE,IAAIO,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MAAE,CAAC,GAAGF,CAAC,CAAC,CAAC;MAC9GjB,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACLJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAE,GAAGoB,IAAI;QAAER,EAAE,EAAEZ,KAAK,CAACyB,MAAM,GAAG,CAAC;QAAEV,SAAS,EAAE,KAAK;QAAEC,SAAS,EAAE,IAAIO,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MAAE,CAAC,CAAC,CAAC;IAChH;EACF,CAAC;EAED,MAAME,YAAY,GAAIN,IAAI,IAAK;IAC7Bf,cAAc,CAACe,IAAI,CAAC;EACtB,CAAC;EAED,MAAMO,YAAY,GAAIf,EAAE,IAAK;IAC3BX,QAAQ,CAACD,KAAK,CAACqB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGU,CAAC;MAAEP,SAAS,EAAE,CAACO,CAAC,CAACP;IAAU,CAAC,GAAGO,CAAC,CAAC,CAAC;EAC/E,CAAC;EAED,MAAMM,YAAY,GAAIhB,EAAE,IAAK;IAC3BX,QAAQ,CAACD,KAAK,CAAC6B,MAAM,CAACP,CAAC,IAAIA,CAAC,CAACV,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMkB,aAAa,GAAG9B,KAAK,CAAC6B,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACP,KAAK,CAACkB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC9B,MAAM,CAAC6B,WAAW,CAAC,CAAC,CAAC,CAAC;EAEnG,oBACElC,OAAA;IAAAoC,QAAA,gBACEpC,OAAA,CAACF,QAAQ;MAACuC,MAAM,EAAEf,UAAW;MAACf,WAAW,EAAEA;IAAY;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1DzC,OAAA;MACE0C,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAEvC,MAAO;MACdwC,QAAQ,EAAGC,CAAC,IAAKxC,SAAS,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFzC,OAAA;MAAAoC,QAAA,EACGH,aAAa,CAACT,GAAG,CAACD,IAAI,iBACrBvB,OAAA,CAACH,QAAQ;QAAe0B,IAAI,EAAEA,IAAK;QAACyB,QAAQ,EAAEnB,YAAa;QAACoB,QAAQ,EAAEnB,YAAa;QAACoB,QAAQ,EAAEnB;MAAa,GAA5FR,IAAI,CAACR,EAAE;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuF,CAC9G;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvC,EAAA,CA3EID,QAAQ;AAAAkD,EAAA,GAARlD,QAAQ;AA6Ed,eAAeA,QAAQ;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}